{"version":3,"file":"static/js/131.620c2e71.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.styled.js","components/TrendingList/TrendingList.jsx","pages/Home.styled.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const CardWrapper = styled.li`\n  width: calc((100% - 40px) / 2);\n  height: 300px;\n  overflow: hidden;\n\n  & a {\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  height: 300px;\n`;\n\nexport const TitleCard = styled.h3`\n  font-weight: 700;\n  font-size: 20px;\n  letter-spacing: -0.025em;\n  line-height: 1.5;\n`;\n\nexport const TextCard = styled.p`\n  max-height: 240px;\n  color: #ffffff;\n  line-height: 1.5;\n\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &:hover::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 5px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchAPI } from 'services/api';\nimport {\n  CardWrapper,\n  TextCard,\n  TextWrapper,\n  TitleCard,\n} from './TrendingList.styled';\n\nconst TrendingList = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchAPI('/trending/movie/day')\n      .then(response => setMovies(response.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  const defaultImg = '';\n\n  return movies.map(movie => {\n    return (\n      <CardWrapper key={movie.id}>\n        <Link to={`movies/${movie.id}`} state={{ from: location }}>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                : defaultImg\n            }\n            width={200}\n            alt=\"poster\"\n          />\n          {console.log(movie)}\n          <TextWrapper>\n            <TitleCard>{movie.title}</TitleCard>\n            <TextCard>{movie.overview}</TextCard>\n          </TextWrapper>\n        </Link>\n      </CardWrapper>\n    );\n  });\n};\n\nexport default TrendingList;\n","import { styled } from 'styled-components';\n\nexport const Hero = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0px 100px 100px 100px;\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Wix Madefor Display', sans-serif;\n  font-size: 200px;\n  text-transform: uppercase;\n  line-height: 1;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  max-width: 800px;\n  color: #1d3557;\n  font-size: 20px;\n  line-height: 1.4;\n  text-align: center;\n`;\n\nexport const TopReleases = styled.section`\n  display: flex;\n  flex-direction: column;\n  background-color: #e63946;\n`;\n\nexport const SubTitle = styled.h2`\n  font-family: 'Wix Madefor Display', sans-serif;\n  font-size: 48px;\n  line-height: 1.2;\n  margin-bottom: 100px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n","import TrendingList from 'components/TrendingList/TrendingList';\nimport { Hero, List, SubTitle, Text, Title, TopReleases } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <main>\n      <Hero>\n        <Title>Movies</Title>\n        <Text>\n          Welcome to the cinematic universe where your movie quest begins!\n          Unleash your inner film buff and embark on a thrilling adventure to\n          discover hidden gems and all-time classics.\n        </Text>\n      </Hero>\n      <TopReleases>\n        <SubTitle>Today&apos;s Hottest Releases</SubTitle>\n        <List>\n          <TrendingList />\n        </List>\n      </TopReleases>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNzM1MGM0MTU3NGU3ZjU1MTk1MzAwZGY3MDI3NmU5YSIsInN1YiI6IjY0ZGNhZmUwYjc3ZDRiMTE0MDE5MDI4ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.buWnv8_WQ7RAZysPNmdWAinzf7Gie3uZSaU1x0l5eDE';\n\nexport const fetchAPI = async url => {\n  const options = {\n    params: {},\n    headers: {\n      accept: 'application/json',\n      Authorization: KEY,\n    },\n  };\n\n  try {\n    const responce = await axios.get(`${BASE_URL}${url}`, options);\n    const data = responce.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchAPI('/trending/movie/day');\n\n// '/trending/movie/day'\n"],"names":["CardWrapper","styled","_templateObject","_taggedTemplateLiteral","TextWrapper","_templateObject2","_templateObject3","TitleCard","_templateObject4","TextCard","_templateObject5","_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","useEffect","fetchAPI","then","response","results","catch","error","console","log","map","movie","_jsx","children","_jsxs","Link","to","concat","id","state","from","src","poster_path","width","alt","title","overview","Hero","Title","Text","TopReleases","SubTitle","List","_templateObject6","TrendingList","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_ref","_asyncToGenerator","_callee","url","options","responce","data","_context","params","headers","accept","Authorization","axios","t0","_x","apply","arguments"],"sourceRoot":""}