{"version":3,"file":"static/js/253.81bbf001.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","components/ImageLoader/ImageLoader.styled.js","components/ImageLoader/ImageLoader.jsx","components/Poster/Poster.styled.js","components/Poster/Poster.jsx","pages/Movies/Movies.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n\nexport const CardWrapper = styled.li`\n  width: calc((100% - 40px) / 2);\n  height: 300px;\n  overflow: hidden;\n\n  & a {\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n  }\n`;\n\n// export const Poster = styled.img`\n//   width: 200px;\n//   height: 100%;\n//   object-fit: cover;\n// `;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  height: 300px;\n`;\n\nexport const TitleCard = styled.h3`\n  font-weight: 700;\n  font-size: 20px;\n  letter-spacing: -0.025em;\n  line-height: 1.5;\n`;\n\nexport const TextCard = styled.p`\n  max-height: 240px;\n  color: #ffffff;\n  line-height: 1.5;\n\n  overflow-y: scroll;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &:hover::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 5px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  CardWrapper,\n  List,\n  //   Poster,\n  TextCard,\n  TextWrapper,\n  TitleCard,\n} from './MoviesList.styled';\nimport Poster from 'components/Poster/Poster';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  //   const defaultImg =\n  //     'https://via.placeholder.com/200x300.png?text=Poster+Not+Available';\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <Poster image={movie.poster_path} width=\"200\" height=\"300\" />\n            {/* {!isImageLoaded && <ImageLoader width={200} height={300} />}\n            <Poster\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              height={300}\n              loading=\"lazy\"\n              alt=\"poster\"\n              onLoad={toggleImageLoading}\n            /> */}\n            <TextWrapper>\n              <TitleCard>{movie.title}</TitleCard>\n              <TextCard>{movie.overview}</TextCard>\n            </TextWrapper>\n          </Link>\n        </CardWrapper>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate = true,\n  animateBegin,\n  backgroundColor = '#f5f6f7',\n  backgroundOpacity = 1,\n  baseUrl = '',\n  children,\n  foregroundColor = '#eee',\n  foregroundOpacity = 1,\n  gradientRatio = 2,\n  gradientDirection = 'left-right',\n  uniqueKey,\n  interval = 0.25,\n  rtl = false,\n  speed = 1.2,\n  style = {},\n  title = 'Loading...',\n  beforeMask = null,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import ContentLoader from 'react-content-loader';\nimport { styled } from 'styled-components';\n\nexport const ImgLoader = styled(ContentLoader)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  /* display: flex; */\n  /* justify-content: center; */\n  /* align-items: center; */\n  flex-shrink: 0;\n  width: 100%;\n  height: 100%;\n`;\n","import { ImgLoader } from './ImageLoader.styled';\n\nexport const ImageLoader = props => {\n  return (\n    <ImgLoader\n      viewBox=\"0 0 500 500\"\n      backgroundColor=\"rgba(29, 53, 87, 0.3)\"\n      foregroundColor=\"rgba(168, 218, 220, 0.5)\"\n      {...props}\n    >\n      <path d=\"M484.52,64.61H15.65C7.1,64.61.17,71.2.17,79.31V299.82c0,8.12,6.93,14.7,15.48,14.7H484.52c8.55,0,15.48-6.58,15.48-14.7V79.31C500,71.2,493.07,64.61,484.52,64.61Zm-9,204.34c0,11.84-7.14,21.44-15.94,21.44H436.39L359.16,171.52c-7.1-10.92-19.67-11.16-27-.51L258.64,277.94C253.78,285,245.73,286,240,280.2l-79.75-80.62c-6-6.06-14.33-5.7-20,.88L62.34,290.39H40.63c-8.8,0-15.94-9.6-15.94-21.44V110.19c0-11.84,7.14-21.44,15.94-21.44H459.54c8.8,0,15.94,9.6,15.94,21.44Z\" />\n      <ellipse cx=\"120\" cy=\"140\" rx=\"28\" ry=\"28\" />\n    </ImgLoader>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const PosterWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const PosterImg = styled.img`\n  /* width: 100%; */\n  /* height: 100%; */\n  object-fit: cover;\n`;\n","import { ImageLoader } from 'components/ImageLoader/ImageLoader';\nimport { useState } from 'react';\nimport { PosterImg, PosterWrapper } from './Poster.styled';\n\nconst Poster = ({ image, width, height }) => {\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n\n  const defaultImg =\n    'https://via.placeholder.com/200x300.png?text=Poster+Not+Available';\n\n  const onImageLoading = () => setIsImageLoaded(true);\n\n  return (\n    <PosterWrapper>\n      {!isImageLoaded && <ImageLoader width={width} height={height} />}\n      <PosterImg\n        loading=\"lazy\"\n        src={image ? `https://image.tmdb.org/t/p/w500/${image}` : defaultImg}\n        width={width}\n        height={height}\n        alt=\"poster\"\n        onLoad={onImageLoading}\n      />\n    </PosterWrapper>\n  );\n};\n\nexport default Poster;\n","import { styled } from 'styled-components';\n\nexport const FindSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  color: #a8dadc;\n  background-color: #1d3557;\n  padding: 0 100px 100px 100px;\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Wix Madefor Display', sans-serif;\n  font-size: 48px;\n  line-height: 1.2;\n  margin-bottom: 50px;\n`;\n\nexport const Text = styled.p`\n  max-width: 600px;\n  color: #fff;\n  font-size: 32px;\n  letter-spacing: -0.05em;\n  line-height: 1.4;\n  text-align: left;\n`;\n\nexport const SearchSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  background-color: #e63946;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n","import { styled } from 'styled-components';\n\nexport const Form = styled.form`\n  position: relative;\n  width: 50%;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 50px;\n  font-size: 18px;\n  line-height: 1.4;\n  border: none;\n  border-radius: 10px;\n  padding: 10px 20px;\n  color: rgb(168, 218, 220);\n  background-color: rgb(48, 88, 144);\n  &::placeholder {\n    color: rgba(168, 218, 220, 0.5);\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  height: 40px;\n  font-size: 18px;\n  line-height: 1.4;\n  border-radius: 10px;\n  color: #000;\n  padding: 0 30px;\n\n  background-color: rgb(168, 218, 220);\n`;\n","import { Button, Form, Input } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n\n    if (!query) {\n      alert('Enter name of movie to search');\n      return;\n    }\n\n    onSubmit(query);\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search...\"\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchAPI } from 'services/api';\nimport { FindSection, SearchSection, Text, Title } from './Movies.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    fetchAPI(`/search/movie?query=${query}`)\n      .then(response => setMovies(response.results))\n      .catch(error => console.log(error));\n  }, [searchParams]);\n\n  const onSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <FindSection>\n        <Title>Find Movies, Explore & Have Fun!</Title>\n        <SearchForm onSubmit={onSubmit} />\n      </FindSection>\n      <SearchSection>\n        {movies.length ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <Text>\n            Dive into our fantastic movie search engine to find that perfect\n            movie for tonight's viewing party. Whether you're in the mood for\n            action, romance, or a sci-fi thriller, the world of cinema is just a\n            search away. Don't hesitate, there's always something worth\n            watching!\n          </Text>\n        )}\n      </SearchSection>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNzM1MGM0MTU3NGU3ZjU1MTk1MzAwZGY3MDI3NmU5YSIsInN1YiI6IjY0ZGNhZmUwYjc3ZDRiMTE0MDE5MDI4ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.buWnv8_WQ7RAZysPNmdWAinzf7Gie3uZSaU1x0l5eDE';\n\nexport const fetchAPI = async url => {\n  const options = {\n    params: {},\n    headers: {\n      accept: 'application/json',\n      Authorization: KEY,\n    },\n  };\n\n  try {\n    const responce = await axios.get(`${BASE_URL}${url}`, options);\n    const data = responce.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchAPI('/trending/movie/day');\n\n// '/trending/movie/day'\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","CardWrapper","_templateObject2","TextWrapper","_templateObject3","TitleCard","_templateObject4","TextCard","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","concat","id","state","from","Poster","image","poster_path","width","height","title","overview","SVG","_a","_b","animate","animateBegin","_c","backgroundColor","_d","backgroundOpacity","_e","baseUrl","_f","foregroundColor","_g","foregroundOpacity","_h","gradientRatio","_j","gradientDirection","uniqueKey","_k","interval","_l","rtl","_m","speed","_o","style","_p","_q","beforeMask","props","__rest","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","createElement","__assign","role","isValidElement","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","ContentLoader","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","ImgLoader","ImageLoader","_objectSpread","d","ry","PosterWrapper","PosterImg","_useState","useState","_useState2","_slicedToArray","isImageLoaded","setIsImageLoaded","loading","src","alt","onLoad","FindSection","Title","Text","SearchSection","Form","Input","Button","onSubmit","e","preventDefault","query","target","elements","value","reset","alert","type","name","autoComplete","autoFocus","placeholder","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","get","fetchAPI","then","response","results","catch","error","console","log","_Fragment","SearchForm","length","MoviesList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","responce","data","wrap","_context","prev","next","params","headers","accept","Authorization","axios","sent","abrupt","t0","stop","_x","apply","arguments","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","i","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}