{"version":3,"file":"static/js/186.0a001d78.chunk.js","mappings":"8LA0BA,UAtBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAQ1B,OANAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,UAADC,OAAWV,EAAO,aACvBW,MAAK,SAAAC,GAAQ,OAAIL,EAAWK,EAASC,QAAQ,IAC7CC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,CAACf,IAEGM,EAAQY,OACbZ,EAAQa,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OAChCC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,KACJK,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,MAFGC,EAGJ,KAGPG,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4CAEP,C,qFClBahB,EAAQ,eAAAW,GAAAO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAG,IAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAO9B,OANKN,EAAU,CACdO,OAAQ,CAAC,EACTC,QAAS,CACPC,OAAQ,mBACRC,cAPJ,+NASCN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBK,EAAAA,EAAAA,IAAU,GAADjC,OAdnB,gCAc+BA,OAAGqB,GAAOC,GAAS,KAAD,EACnC,OADrBC,EAAQG,EAAAQ,KACRV,EAAOD,EAASC,KAAIE,EAAAS,OAAA,SACnBX,GAAI,OAAAE,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEXpB,QAAQC,IAAGmB,EAAAU,IAAQ,yBAAAV,EAAAW,OAAA,GAAAjB,EAAA,kBAEtB,gBAhBoBkB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,I","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAPI } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchAPI(`/movie/${movieId}/reviews`)\n      .then(response => setReviews(response.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return reviews.length ? (\n    reviews.map(({ author, content, id }) => (\n      <li key={id}>\n        <p>{author}</p>\n        <p>{content}</p>\n      </li>\n    ))\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNzM1MGM0MTU3NGU3ZjU1MTk1MzAwZGY3MDI3NmU5YSIsInN1YiI6IjY0ZGNhZmUwYjc3ZDRiMTE0MDE5MDI4ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.buWnv8_WQ7RAZysPNmdWAinzf7Gie3uZSaU1x0l5eDE';\n\nexport const fetchAPI = async url => {\n  const options = {\n    params: {},\n    headers: {\n      accept: 'application/json',\n      Authorization: KEY,\n    },\n  };\n\n  try {\n    const responce = await axios.get(`${BASE_URL}${url}`, options);\n    const data = responce.data;\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchAPI('/trending/movie/day');\n\n// '/trending/movie/day'\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchAPI","concat","then","response","results","catch","error","console","log","length","map","_ref","author","content","id","_jsxs","children","_jsx","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","responce","data","wrap","_context","prev","next","params","headers","accept","Authorization","axios","sent","abrupt","t0","stop","_x","apply","arguments"],"sourceRoot":""}